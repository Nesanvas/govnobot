import asyncio
from telethon.sync import TelegramClient
from telethon.tl.functions.messages import GetHistoryRequest
import openai
import requests
from io import BytesIO
from PIL import Image
from telegram import Bot
import json
from datetime import datetime, timezone
import os

# === –ù–ê–°–¢–†–û–ô–ö–ò —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
api_id = int(os.getenv("21923802"))
api_hash = os.getenv("b2cfccddfc864fb5f1db80bc12e7f9b3")
openai.api_key = os.getenv("OPENAI_API_KEY")
telegram_bot_token = os.getenv("7356315664:AAH0YYQx0kULG_iLrHDv28ELob5ZvSAsZXQ")
channel_to_post = os.getenv("@govnokall")

channels_to_parse = [
    'toporlive',
    'readovkanews',
    'breakingmash',
    'rian_ru',
    'meduzalive',
    'ksonline',         # —ç–∫–æ–Ω–æ–º–∏–∫–∞
    'banksta',          # —ç–∫–æ–Ω–æ–º–∏–∫–∞/—Ñ–∏–Ω–∞–Ω—Å—ã
    'rosnedvizhimost',  # –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å
    'autonewsru'        # –∞–≤—Ç–æ
]

client = TelegramClient('anon', api_id, api_hash)
bot = Bot(token=telegram_bot_token)

# === –ó–ê–ì–†–£–ó–ö–ê ID –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
posted_ids_file = 'posted_ids.json'
try:
    with open(posted_ids_file, 'r') as f:
        posted_messages = set(json.load(f))
except (FileNotFoundError, json.JSONDecodeError):
    posted_messages = set()

async def main():
    await client.start()
    now = datetime.now(timezone.utc)

    for channel in channels_to_parse:
        print(f'üì° –ß–∏—Ç–∞–µ–º –∫–∞–Ω–∞–ª: {channel}')
        entity = await client.get_entity(channel)
        history = await client(GetHistoryRequest(
            peer=entity,
            limit=10,
            offset_date=None,
            offset_id=0,
            max_id=0,
            min_id=0,
            add_offset=0,
            hash=0
        ))

        for message in history.messages:
            if not message.message:
                print(f"‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {message.id}")
                continue

            if message.id in posted_messages:
                print(f"‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {message.id} ‚Äî —É–∂–µ –ø—É–±–ª–∏–∫–æ–≤–∞–ª–æ—Å—å")
                continue

            print(f"\nüß† –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ {message.id}: {message.message[:100]}...")

            # === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à—É—Ç–∫–∏ ===
            prompt = f"–ü–µ—Ä–µ–¥–µ–ª–∞–π –Ω–æ–≤–æ—Å—Ç—å –Ω–∏–∂–µ –≤ –≥—Ä—É–±—É—é, —è–∑–≤–∏—Ç–µ–ª—å–Ω—É—é, —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—É—é 2-—Å—Ç—Ä–æ—á–Ω—É—é —à—É—Ç–∫—É —Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º –º–∞—Ç–æ–º –∏ –Ω–æ—Ç–∫–∞–º–∏ —á—ë—Ä–Ω–æ–≥–æ —é–º–æ—Ä–∞. –ë–µ–∑ —Å–æ–ø–ª–µ–π, –∫–∞–∫ –±—É–¥—Ç–æ –∂–∏–∑–Ω—å ‚Äî —ç—Ç–æ —Ä–∂–∞–≤–∞—è —Å–∫–æ–≤–æ—Ä–æ–¥–∫–∞ –ø–æ –µ–±–∞–ª—É.\n\n{message.message}"
            try:
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[{"role": "user", "content": prompt}],
                    max_tokens=100,
                    temperature=0.95
                )
                joke = response.choices[0].message.content.strip()
                print(f"üí¨ GPT –æ—Ç–≤–µ—Ç: {joke}")
            except Exception as e:
                joke = f"[GPT —Å–¥–æ—Ö. –û—à–∏–±–∫–∞: {e}]"
                print(joke)

            # === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ DALL-E ===
            try:
                dalle_response = openai.Image.create(
                    prompt=joke,
                    n=1,
                    size="512x512"
                )
                img_url = dalle_response['data'][0]['url']
                img_data = requests.get(img_url).content
                image = BytesIO(img_data)
                print("üñº –ö–∞—Ä—Ç–∏–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞")
            except Exception as e:
                joke += f"\n\n[–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}]"
                image = None
                print(joke)

            # === –ü—É–±–ª–∏–∫–∞—Ü–∏—è ===
            try:
                if image:
                    await bot.send_photo(chat_id=channel_to_post, photo=image, caption=joke)
                else:
                    await bot.send_message(chat_id=channel_to_post, text=joke)
                posted_messages.add(message.id)

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
                with open(posted_ids_file, 'w') as f:
                    json.dump(list(posted_messages), f)

                print(f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {message.id}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")

with client:
    client.loop.run_until_complete(main())
